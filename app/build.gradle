// App-level build.gradle (usually located in the app module)
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'kotlin-android'
    id 'com.google.dagger.hilt.android'
}

apply plugin: 'kotlin-kapt'
apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-android'
apply plugin: 'dagger.hilt.android.plugin'

android {
    namespace 'com.example.neardroid'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.neardroid"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // keep config value
            buildConfigField("String", "COUNTRY", "\"th\"")
            resValue("string", "country_name", "th")

            buildConfigField("String", "API_KEY", "\"c914619ecb3245f7a1fc8d9ef7df409c\"")
            resValue("string", "api_key", "c914619ecb3245f7a1fc8d9ef7df409c")
        }
        budug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // keep config value
            buildConfigField("String", "COUNTRY", "\"th\"")
            resValue("string", "country_name", "th")

            buildConfigField("String", "API_KEY", "\"c914619ecb3245f7a1fc8d9ef7df409c\"")
            resValue("string", "api_key", "c914619ecb3245f7a1fc8d9ef7df409c")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        buildConfig = true // enable buildConfig
    }
    buildToolsVersion '33.0.1'

    // enable app use data binding
    dataBinding {
        enabled = true
    }

    // enable app use JUnit5
    testOptions {
        unitTests.all {
            useJUnitPlatform()  // Enables JUnit5
        }
    }
}

dependencies {
    // main
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.annotation:annotation:1.7.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.7'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.7'

    // Dependency Injection with Dagger2
    implementation 'com.google.dagger:dagger:2.44'
    implementation 'androidx.activity:activity:1.9.1'
    implementation 'com.google.firebase:firebase-firestore-ktx:25.1.0'
    kapt 'com.google.dagger:dagger-compiler:2.44'
    // For Android
    implementation 'com.google.dagger:dagger-android:2.44'
    implementation 'com.google.dagger:dagger-android-support:2.44'
    kapt 'com.google.dagger:dagger-android-processor:2.44'
    kapt "com.google.dagger:dagger-compiler:2.44"

    // Hilt dependency-injection
    implementation 'com.google.dagger:hilt-android:2.44'
    kapt 'com.google.dagger:hilt-compiler:2.44'

    // For instrumentation tests
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.44'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.44'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.44'
    kaptTest 'com.google.dagger:hilt-compiler:2.44'

    // add retrofit for HTTP requests
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // add RxJava + RxAndroid for reactive (asynchronous) programming
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.2'
    implementation 'io.reactivex.rxjava3:rxjava:3.1.5'
    implementation 'io.reactivex.rxjava3:rxkotlin:3.0.1'

    // LiveCycle + ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"

    // add rxjava3-retrofit-adapter for handling data from retrofit <--> Rx
    implementation "com.github.akarnokd:rxjava3-retrofit-adapter:3.0.0"

    // Ktor
    implementation("io.ktor:ktor-client-core:2.2.3")
    implementation("io.ktor:ktor-client-content-negotiation:2.2.3")
    implementation("io.ktor:ktor-client-okhttp:2.2.3")

    // add Picasso for image downloading and caching library for Android
    implementation 'com.squareup.picasso:picasso:2.8'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    // Java language implementation
    implementation("androidx.navigation:navigation-fragment:2.7.7")
    implementation("androidx.navigation:navigation-ui:2.7.7")

    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:2.7.7")
    implementation("androidx.navigation:navigation-ui-ktx:2.7.7")

    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:2.7.7")

    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:2.7.7")

    // Jetpack Compose Integration
    implementation("androidx.navigation:navigation-compose:2.7.7")

    // Material Design
    implementation 'com.google.android.material:material:1.13.0-alpha04'

    // Room (Local DB)
    implementation("androidx.room:room-runtime:2.6.1")
    kapt("androidx.room:room-compiler:2.6.1")
    implementation "androidx.room:room-ktx:2.6.1"

    // Glide for image management
    implementation 'com.github.bumptech.glide:glide:4.16.0'

    // Include the Vintage engine for backwards compatibility with JUnit4 tests
    testImplementation "org.junit.vintage:junit-vintage-engine:5.9.0"

    // Optional: Additional libraries for parameterized tests, assertions, etc.
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.9.0"

    // add the kotlin-reflect dependency for certain advanced features of Kotlin:
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:1.8.0"

    // AndroidX Test
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Hilt Testing
    androidTestImplementation "com.google.dagger:hilt-android-testing:2.44"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:2.44"

    // Mockito
    testImplementation 'org.mockito:mockito-core:4.3.1'
    testImplementation 'org.mockito:mockito-inline:4.3.1' // For mocking final classes

    // Unit testing dependencies
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.9.0"

    // JUnit
    testImplementation 'junit:junit:4.13.2'
}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}
